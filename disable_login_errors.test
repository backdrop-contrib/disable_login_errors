<?php

/**
 * @file
 * Test the basic functions of the Disable login errors module.
 */


/**
 * Test disable_login_errors interface.
 */
class DisableLoginErrorsInterfaceTest extends BackdropWebTestCase {
  // @ignore comment_comment_docblock_missing
  public static function getInfo() {
    return array(
      'name' => t('Disable login errors interface'),
      'description' => t("Test Disable login errors web interface"),
      'group' => t('Disable login errors'),
    );
  }

  // @ignore comment_comment_docblock_missing
  public function setUp() {
    parent::setUp('disable_login_errors');
  }

  /**
   * Test disable core login error toggle.
   */
  public function testBackdropErrorToggle() {
    $normal_user = $this->backdropCreateUser(array('access content'));

    // Intentionally break the password to repeat invalid logins.
    $normal_user->pass_raw = user_password();

    module_disable(array('disable_login_errors'));

    $this->backdropLoginLite($normal_user);
    $this->assertRaw(t('Sorry, incorrect password. <a href="@password">Have you forgotten your password?</a>', array('@password' => url('user/password', array('query' => array('name' => $normal_user->name))))), t('Backdrop "...Have you forgotten your password?" login error message found.'));

    // Block user.
    user_save($normal_user, array('status' => 0));
    $this->backdropLoginLite($normal_user);
    $this->assertRaw(t('The username %name has not been activated or is blocked.', array('%name' => $normal_user->name)), t('Backdrop "...has not been activated or is blocked." login error message found.'));

    module_disable(array('disable_login_errors'));

    // Unblock user.
    user_save($normal_user, array('status' => 1));

    module_enable(array('disable_login_errors'));

    $this->backdropLoginLite($normal_user);
    $this->assertNoRaw(t('Sorry, unrecognized username or password. <a href="@password">Have you forgotten your password?</a>', array('@password' => url('user/password', array('query' => array('name' => $normal_user->name))))), t('Backdrop "...Have you forgotten your password?" login error message not found.'));

    // Block user.
    user_save($normal_user, array('status' => 0));
    $this->backdropLoginLite($normal_user);
    $this->assertNoRaw(t('The username %name has not been activated or is blocked.', array('%name' => $normal_user->name)), t('Backdrop "...has not been activated or is blocked." login error message not found.'));
  }
}
